def index(request):
    latest_question_list = Question.objects.order_by("-pub_date")[:5]

    # # View modified to output information by the template.
    # result = []
    # for q in latest_question_list:
    #     result.append(q.question_text)
    # output = ", ".join(result)

    # Ideally you can say
    # output = ", ".join([q.question_text for q in latest_question_list])

    context = {"latest_question_list": latest_question_list}
    return render(request, "polls/index.html", context)


def detail(request, question_id):
    try:
        question = Question.objects.get(pk=question_id)
    except Question.DoesNotExist:
        raise Http404("Question doesn't exist.")
    return render(request, "polls/detail.html", {"question": question})

# This function above is the same as this down, only that the above uses
# the try exception and this one down uses the ge_object_or_404() shortcut method.

def detail(request, question_id):
    question = get_object_or_404(Question, pk=question_id)
    return render(request, "polls/detail.html", {"question": question})


   
